const request=require('supertest')
const app=require('../src/app')
const Task=require('../src/models/task')
const {_id,demoUser,demoUser1,demotask,demotask1,demotask2,setupDB}=require('./fixtures/db')
beforeEach(setupDB)
test('should create a task  for authencated user',async()=>{
    const res=await request(app).post('/task')
    .set('Authorization',`Bearer ${demoUser.tokens[0].token}`)
    .send({description:'Work hard to acheive'}).expect(201)
    const user=await Task.findById(res.body._id)
    expect(user).not.toBeNull()
    expect(user.completed).toBe(false)
})
test('should get a tasks for authenticated user',async()=>{
    const res=await request(app).get('/tasks')
    .set('Authorization',`Bearer ${demoUser.tokens[0].token}`)
    .send().expect(201)
    expect(res.body.length).toBe(2)
})
test('test delete task security',async()=>{
    await request(app).delete(`/task/${demotask._id}`)
    .set('Authorization',`Bearer ${demoUser1}`).send().expect(404)
    const task=await Task.findById(demotask._id)
    expect(task).not.toBeNull()
})